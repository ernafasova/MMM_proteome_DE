---
title: "Female_week48"
format: html
---

# Load dependencies
```{r setup}
#| message: false
#| warning: false

source(here::here("R/library.R"))
load(here::here("data/metadata_F.rda"))
load(here::here("data/female_log2_filt_median.rda"))
```


# functions
```{r}
# For PCA
plot_pca <- function(data, color_var, shape_var = NULL, color_vals, file_name, plot_title) {
  # Build aesthetic mapping conditionally
  mapping <- aes(
    x = PC1,
    y = PC2,
    color = .data[[color_var]],
    text = hover_text
  )
  if (!is.null(shape_var)) {
    mapping <- aes(
      x = PC1,
      y = PC2,
      color = .data[[color_var]],
      shape = .data[[shape_var]],
      text = hover_text
    )
  }
  
  p <- ggplot(data, mapping) +
    geom_point(size = 3.5, alpha = 0.7) +
    stat_ellipse(
      aes(
        group = .data[[color_var]],
        fill = .data[[color_var]]
      ),
      geom = "path",
      show.legend = FALSE
    ) +
    scale_color_manual(values = color_vals) +
    labs(
      title = plot_title,
      subtitle = paste("based on", n_nona, "proteins out of", n_original),
      x = paste0("PC1 (", pca_var_perc[1], "%)"),
      y = paste0("PC2 (", pca_var_perc[2], "%)")
    ) +
    theme_bw(base_size = 14) +
    theme(
      plot.title = element_text(hjust = 0.5, face = "bold"),
      plot.subtitle = element_text(hjust = 0.5)
    )
  
  print(p)
}

################################ limma main results 
# For limma
get_limma_results <- function(fit_obj, coef_name, contrast_label, alpha = 0.05) {
  
  # Extract results table
  top_table <- limma::topTable(
    fit_obj,
    coef          = coef_name,
    adjust.method = "BH",
    sort.by       = "logFC",
    number        = Inf
  ) %>%
    rownames_to_column("Protein")
  
  # Filter significant hits
  sig <- top_table %>%
    filter(adj.P.Val < alpha) %>%
    drop_na()
  
  up   <- sig %>% filter(logFC > 0)
  down <- sig %>% filter(logFC < 0)
  
  # Console summary
  message("\n---- ", contrast_label, " ----")
  message("Total significant: ", nrow(sig))
  message("UP: ", nrow(up), " | DOWN: ", nrow(down))
  
  # Return result lists
  return(list(
    top_table = top_table,
    sig       = sig,
    up        = up,
    down      = down
  ))
}


```

# subrgoup female
```{r}
metadata_F <- metadata_F %>% dplyr::mutate(Group = paste(diet, strain, sep = "_"))
metadata_F48 <- metadata_F %>% dplyr::filter(weeks == "48") 
df_F48 <- female_log2_filt_median[, metadata_F48$new_sample_id] # 7612
dim(df_F48) # 29 samples
all(colnames(df_F48) == metadata_F48$new_sample_id)  # Should be TRUE

metadata_F48_J <- metadata_F48 %>% dplyr::filter(strain == "J")
df_F48_J <- df_F48[, metadata_F48_J$new_sample_id]
dim(df_F48_J) # 14 samples
all(colnames(df_F48_J) == metadata_F48_J$new_sample_id)  # Should be TRUE

metadata_F48_Ntac <- metadata_F48 %>% dplyr::filter(strain == "Ntac")
df_F48_Ntac <- df_F48[, metadata_F48_Ntac$new_sample_id]
dim(df_F48_Ntac) # 15 samples
all(colnames(df_F48_Ntac) == metadata_F48_Ntac$new_sample_id)  # Should be TRUE

```
# PCA
```{r}
n_original <- nrow(df_F48) # 7642
df_nona <- na.omit(df_F48) 
n_nona <- nrow(df_nona) # 6586

# transpose data 
pca_nona <- prcomp(t(df_nona), scale = TRUE)
# quick scatter plot
factoextra::fviz_pca_ind(pca_nona) 
plot(pca_nona$x[,1], pca_nona$x[,2])

# Eigenvalues (variance explained by each PC)
pca_var <- pca_nona$sdev^2 
pca_var_perc <- round(pca_var / sum(pca_var) * 100, digits = 1)
fviz_eig(pca_nona, addlabels = TRUE)  # scree plot 

pca_results <- as.data.frame(pca_nona$x) %>%
  tibble::rownames_to_column("new_sample_id")  # keep sample IDs

pca_data48 <- pca_results %>%
  dplyr::select(new_sample_id, PC1, PC2, PC3, PC4) %>% 
  dplyr::inner_join(metadata_F48, by = "new_sample_id") %>%
  dplyr::mutate(
    hover_text = paste0(
      "Sample: ", sample_id,
      "<br>Diet: ", diet,
      "<br>Strain: ", strain
    )
  )

# Should be all TRUE / empty set
all(pca_results$new_sample_id %in% metadata_F48$new_sample_id)

pca_diet_F48 <- plot_pca(
  data       = pca_data48,
  color_var  = "diet",
  shape_var  = "strain",
  color_vals = c("LFD" = "#21908CFF", "FFMD" = "#D55E00"),
  file_name  = "pca_F48_diet.png",
  plot_title = "Female, 48 weeks (n=29)"
)

pca_strain_F48 <- plot_pca(
  data       = pca_data48,
  color_var  = "strain",
  shape_var  = "diet",
  color_vals = c("Ntac" = "#AA3377", "J" = "#CCBB44"),
  file_name  = "pca_F48_strain.png",
  plot_title = "Female, 48 weeks (n=29)"
)

ggsave(file.path("doc", "pca_diet_F48.png"),  plot = pca_diet_F48,  width = 6, height = 5, dpi = 300, bg = "white")
ggsave(file.path("doc", "pca_strain_F48.png"), plot = pca_strain_F48, width = 6, height = 5, dpi = 300, bg = "white")

```

# Limma Main Effect (additive model)
More power because all mice contribute to each main‐effect estimate.
```{r}
metadata_F48 <- metadata_F48 %>%
  dplyr::mutate(
    diet   = factor(diet, levels = c("LFD", "FFMD")),
    strain = factor(strain, levels = c("J", "Ntac"))
  )
levels(metadata_F48$diet)
levels(metadata_F48$strain)

table(metadata_F48$diet)   # FFMD-24, LFD-12
table(metadata_F48$strain) # J-17, Ntac-18

# create design matrix
design_matrix <- model.matrix(~ diet + strain + beatbox_batch, data = metadata_F48)
colnames(design_matrix)
fit  <- limma::lmFit(df_F48, design_matrix)
fit2 <- limma::eBayes(fit)

# ---- Usage ----
limma_results_F48_diet   <- get_limma_results(fit2, "dietFFMD",   "F48: Diet")
limma_results_F48_strain <- get_limma_results(fit2, "strainNtac", "F48: Strain")

# Diet histogram
hist(limma_results_F48_diet$top_table$P.Value,
     main = "F48: Diet main effect", xlab = "P-value",
     col = "darkslategray4", breaks = 30)
hist(limma_results_F48_strain$top_table$P.Value,
     main = "F48: Strain main effect", xlab = "P-value",
     col = "darkslategray4", breaks = 30)

png(file.path("doc", "F48_main_diet_hist.png"),
    width = 5, height = 4, units = "in", res = 300, bg = "white")
hist(limma_results_F48_diet$top_table$P.Value,
     main = "F48: Diet main effect", xlab = "P-value",
     col = "darkslategray4", breaks = 30)
dev.off()

png(file.path("doc", "F48_main_strain_hist.png"),
    width = 5, height = 4, units = "in", res = 300, bg = "white")
hist(limma_results_F48_strain$top_table$P.Value,
     main = "F48: Strain main effect", xlab = "P-value",
     col = "darkslategray4", breaks = 30)
dev.off()

```

Limma Contrasts
```{r}
table(metadata_F48$Group)
metadata_F48$Group <- factor(
  metadata_F48$Group,
  levels = c("LFD_J", "LFD_Ntac", "FFMD_J", "FFMD_Ntac")
)
levels(metadata_F48$Group)

design_group <- model.matrix(~ 0 + Group + beatbox_batch, data = metadata_F48)
colnames(design_group)
colnames(design_group)[1:4] <- colnames(design_group)[1:4] |>
  sub("^Group", "", x = _)

contrast_matrix <- makeContrasts(
  Diet_in_J      = FFMD_J     - LFD_J,
  Diet_in_Ntac   = FFMD_Ntac  - LFD_Ntac,
  Strain_in_LFD  = LFD_Ntac   - LFD_J,
  Strain_in_FFMD = FFMD_Ntac  - FFMD_J,
  Interaction    = (FFMD_Ntac - LFD_Ntac) - (FFMD_J - LFD_J),
  levels = design_group
)

fit  <- lmFit(df_F48, design_group)
fit2 <- contrasts.fit(fit, contrast_matrix)
fit2 <- eBayes(fit2)

get_limma_results_contrast <- function(fit_obj, coef_name, label, alpha = 0.05) {
  top_table <- limma::topTable(
    fit_obj,
    coef          = coef_name,
    adjust.method = "BH",
    sort.by       = "logFC",
    number        = Inf
  ) %>% tibble::rownames_to_column("Protein")
  
  sig  <- top_table %>% dplyr::filter(adj.P.Val < alpha) %>% tidyr::drop_na()
  up   <- sig %>% dplyr::filter(logFC > 0)
  down <- sig %>% dplyr::filter(logFC < 0)
  
  cat("\n----", label, "----\n")
  cat("Total significant:", nrow(sig), "\n")
  cat("Up:", nrow(up), " | Down:", nrow(down), "\n")
  
  png(file.path("doc", paste0(label, "_hist.png")),
      width = 5, height = 4, units = "in", res = 300, bg = "white")
  hist(top_table$P.Value,
       main = paste(label, "P-value histogram"),
       xlab = "P-value", col = "darkslategray4")
  dev.off()
  
  list(top_table = top_table, sig = sig, up = up, down = down)
}

# 2. Apply to All Contrasts in a Loop
contrast_names <- colnames(contrast_matrix)

results_list <- list()
for (cname in contrast_names) {
  results_list[[cname]] <- get_limma_results_contrast(
    fit2,
    coef_name = cname,
    label     = cname,
    alpha     = 0.05
  )
}

# Store for later inspection
limma_results_F48_contrasts <- results_list

```
## Euler
```{r}
# euler for total
diet_J_sig    <- limma_results_F48_contrasts$Diet_in_J$sig$Protein
diet_Ntac_sig <- limma_results_F48_contrasts$Diet_in_Ntac$sig$Protein

# Euler diagram
fit_euler <- euler(list(J = diet_J_sig, Ntac = diet_Ntac_sig))

euler_total <- plot(
  fit_euler, quantities = TRUE, labels = TRUE,
  fills = c("#CCBB44", "#AA3377"), edges = TRUE,
  main = "F48 Sig diet hits: total"
)

print(euler_total)
ggsave(file.path("doc", "euler_F48_Diet_effect_total.png"),
       plot = euler_total, width = 4, height = 3, dpi = 300, bg = "white")

cat("Number unique to Ntac:", length(setdiff(diet_Ntac_sig, diet_J_sig)), "\n")
cat("Number unique to J:",    length(setdiff(diet_J_sig, diet_Ntac_sig)), "\n")
cat("Number overlap (both):", length(intersect(diet_Ntac_sig, diet_J_sig)), "\n")
cat("Total significant (Ntac):", length(diet_Ntac_sig), "\n")
cat("Total significant (J):",    length(diet_J_sig), "\n")

#######################################################################
# euler for upregulated proteins in J & Ntac
diet_J_up    <- limma_results_F48_contrasts$Diet_in_J$up$Protein
diet_Ntac_up <- limma_results_F48_contrasts$Diet_in_Ntac$up$Protein

# Euler diagram
fit_euler_up <- euler(list(J_up = diet_J_up, Ntac_up = diet_Ntac_up))

eulerplot_up <- plot(
  fit_euler_up, quantities = TRUE, labels = TRUE,
  fills = c("#fde0dd", "#fa9fb5"), edges = TRUE,
  main = "Significant diet hits: UP"
)

print(eulerplot_up)
ggsave(file.path("doc", "euler_F48_Diet_effect_up.png"),
       plot = eulerplot_up, width = 4, height = 3, dpi = 300, bg = "white")

cat("Number unique to Ntac-up:", length(setdiff(diet_Ntac_up, diet_J_up)), "\n")
cat("Number unique to J-up:",    length(setdiff(diet_J_up, diet_Ntac_up)), "\n")
cat("Number overlap (both)-up:", length(intersect(diet_Ntac_up, diet_J_up)), "\n")
cat("Total significant (Ntac)-up:", length(diet_Ntac_up), "\n")
cat("Total significant (J)-up:",    length(diet_J_up), "\n")

#####################################################################
# euler for down-regulated proteins in J & Ntac
diet_J_down    <- limma_results_F48_contrasts$Diet_in_J$down$Protein
diet_Ntac_down <- limma_results_F48_contrasts$Diet_in_Ntac$down$Protein

fit_euler_down <- euler(list(J_down = diet_J_down, Ntac_down = diet_Ntac_down))

eulerplot_down <- plot(
  fit_euler_down, quantities = TRUE, labels = TRUE,
  fills = c("#ece7f2", "#2b8cbe"), edges = TRUE,
  main = "Significant diet hits: DOWN"
)
print(eulerplot_down)

ggsave(file.path("doc", "euler_F48_Diet_effect_down.png"),
       plot = eulerplot_down, width = 4, height = 3, dpi = 300, bg = "white")

cat("Number unique to Ntac-down:", length(setdiff(diet_Ntac_down, diet_J_down)), "\n")
cat("Number unique to J-down:",    length(setdiff(diet_J_down, diet_Ntac_down)), "\n")
cat("Number overlap (both)-down:", length(intersect(diet_Ntac_down, diet_J_down)), "\n")
cat("Total significant (Ntac)-down:", length(diet_Ntac_down), "\n")
cat("Total significant (J)-down:",    length(diet_J_down), "\n")

```


## common ORA
```{r}
background_proteins <- rownames(df_F48)
length(background_proteins) # 7612

common_diet_proteins <- intersect(diet_J_sig, diet_Ntac_sig)
length(common_diet_proteins)  # 389

# mapped <- AnnotationDbi::select(org.Mm.eg.db, keys = common_diet_proteins, keytype = "SYMBOL", columns = "ENTREZID")
# entrez_ids <- unique(na.omit(mapped$ENTREZID))

ora_bp <- clusterProfiler::enrichGO(
  gene          = common_diet_proteins,
  universe      = background_proteins,
  OrgDb         = org.Mm.eg.db,
  keyType       = "SYMBOL",
  ont           = "BP",
  pAdjustMethod = "BH",
  pvalueCutoff  = 1,
  qvalueCutoff  = 0.05,
  readable      = TRUE
)

barplot(ora_bp, showCategory = 10, title = "GOBP-ORA: Common Diet-Regulated Proteins")
ora_diet_F48_dotplot <- clusterProfiler::dotplot(ora_bp, showCategory = 10, title = "GOBP-ORA: Common diet Proteins")
print(ora_diet_F48_dotplot)

ggsave(
  file.path("doc", "ora_diet_F48_dotplot.png"),
  plot = ora_diet_F48_dotplot, width = 6, height = 5, dpi = 300, bg = "white"
)

```

## ORA up/down
```{r}
diet_J_up    <- limma_results_F48_contrasts$Diet_in_J$up$Protein    # e.g., 1104
diet_Ntac_up <- limma_results_F48_contrasts$Diet_in_Ntac$up$Protein # e.g., 428

diet_J_up_uniq    <- setdiff(diet_J_up,    diet_Ntac_up)  # 448
diet_Ntac_up_uniq <- setdiff(diet_Ntac_up, diet_J_up)     # 227

background_proteins <- rownames(df_F48) # e.g., 7612

ora_bp_J_up_uniq <- enrichGO(
  gene          = diet_J_up_uniq,
  universe      = background_proteins,
  OrgDb         = org.Mm.eg.db,
  keyType       = "SYMBOL",
  ont           = "BP",
  pAdjustMethod = "BH",
  pvalueCutoff  = 1,
  qvalueCutoff  = 0.05,
  readable      = TRUE
)

ora_bp_Ntac_up_uniq <- enrichGO(
  gene          = diet_Ntac_up_uniq,
  universe      = background_proteins,
  OrgDb         = org.Mm.eg.db,
  keyType       = "SYMBOL",
  ont           = "BP",
  pAdjustMethod = "BH",
  pvalueCutoff  = 1,
  qvalueCutoff  = 0.05,
  readable      = TRUE
)

dotplot_ora_bp_J_up_uniq    <- dotplot(ora_bp_J_up_uniq,    showCategory = 10, title = "GOBP-ORA: uniq up J")
dotplot_ora_bp_Ntac_up_uniq <- dotplot(ora_bp_Ntac_up_uniq, showCategory = 10, title = "GOBP-ORA: uniq up Ntac")

print(dotplot_ora_bp_J_up_uniq)
print(dotplot_ora_bp_Ntac_up_uniq)

ggsave(file.path("doc", "dotplot_ora_bp_J_up_uniq.png"),
       plot = dotplot_ora_bp_J_up_uniq, width = 6, height = 6, dpi = 300, bg = "white")
ggsave(file.path("doc", "dotplot_ora_bp_Ntac_up_uniq.png"),
       plot = dotplot_ora_bp_Ntac_up_uniq, width = 6, height = 6, dpi = 300, bg = "white")

# write.csv(as.data.frame(ora_bp), file = "doc/common_dietproteins_GOBP_enrichment_F48.csv", row.names = FALSE)

ora_mf_J_up_uniq <- enrichGO(
  gene          = diet_J_up_uniq,
  universe      = background_proteins,
  OrgDb         = org.Mm.eg.db,
  keyType       = "SYMBOL",
  ont           = "MF",
  pAdjustMethod = "BH",
  pvalueCutoff  = 1,
  qvalueCutoff  = 0.05,
  readable      = TRUE
)

ora_mf_Ntac_up_uniq <- enrichGO(
  gene          = diet_Ntac_up_uniq,
  universe      = background_proteins,
  OrgDb         = org.Mm.eg.db,
  keyType       = "SYMBOL",
  ont           = "MF",
  pAdjustMethod = "BH",
  pvalueCutoff  = 1,
  qvalueCutoff  = 0.05,
  readable      = TRUE
)

dotplot_ora_mf_J_up_uniq    <- dotplot(ora_mf_J_up_uniq,    showCategory = 10, title = "GOMF-ORA: uniq up J")
dotplot_ora_mf_Ntac_up_uniq <- dotplot(ora_mf_Ntac_up_uniq, showCategory = 10, title = "GOMF-ORA: uniq up Ntac")
print(dotplot_ora_mf_Ntac_up_uniq)

ggsave(file.path("doc", "dotplot_ora_mf_J_up_uniq.png"),
       plot = dotplot_ora_mf_J_up_uniq, width = 6, height = 6, dpi = 300, bg = "white")
ggsave(file.path("doc", "dotplot_ora_mf_Ntac_up_uniq.png"),
       plot = dotplot_ora_mf_Ntac_up_uniq, width = 6, height = 6, dpi = 300, bg = "white")

ora_cc_J_up_uniq <- enrichGO(
  gene          = diet_J_up_uniq,
  universe      = background_proteins,
  OrgDb         = org.Mm.eg.db,
  keyType       = "SYMBOL",
  ont           = "CC",
  pAdjustMethod = "BH",
  pvalueCutoff  = 1,
  qvalueCutoff  = 0.05,
  readable      = TRUE
)

ora_cc_Ntac_up_uniq <- enrichGO(
  gene          = diet_Ntac_up_uniq,
  universe      = background_proteins,
  OrgDb         = org.Mm.eg.db,
  keyType       = "SYMBOL",
  ont           = "CC",
  pAdjustMethod = "BH",
  pvalueCutoff  = 1,
  qvalueCutoff  = 0.05,
  readable      = TRUE
)

dotplot_ora_cc_J_up_uniq    <- dotplot(ora_cc_J_up_uniq,    showCategory = 10, title = "GOCC-ORA: uniq up J")
dotplot_ora_cc_Ntac_up_uniq <- dotplot(ora_cc_Ntac_up_uniq, showCategory = 10, title = "GOCC-ORA: uniq up Ntac")

print(dotplot_ora_cc_J_up_uniq)
print(dotplot_ora_cc_Ntac_up_uniq)

ggsave(file.path("doc", "dotplot_ora_cc_J_up_uniq.png"),
       plot = dotplot_ora_cc_J_up_uniq, width = 6, height = 6, dpi = 300, bg = "white")
ggsave(file.path("doc", "dotplot_ora_cc_Ntac_up_uniq.png"),
       plot = dotplot_ora_cc_Ntac_up_uniq, width = 6, height = 6, dpi = 300, bg = "white")

```


# Strain difference in baseline & FFMD
```{r}
metadata_F48_lfd <- metadata_F48 %>% dplyr::filter(diet == "LFD")
df_F48_lfd <- df_F48[, metadata_F48_lfd$new_sample_id]
dim(df_F48_lfd) # 17 samples
all(colnames(df_F48_lfd) == metadata_F48_lfd$new_sample_id)  # Should be TRUE

metadata_F48_ffmd <- metadata_F48 %>% dplyr::filter(diet == "FFMD")
df_F48_ffmd <- df_F48[, metadata_F48_ffmd$new_sample_id]
dim(df_F48_ffmd) # 18 samples
all(colnames(df_F48_ffmd) == metadata_F48_ffmd$new_sample_id)  # Should be TRUE

```


## pca-LFD
```{r}
dim(df_F48_lfd) # 17 samples
df_nona <- na.omit(df_F48_lfd) 

n_original <- nrow(df_F48_lfd) # 7642
n_nona <- nrow(df_nona) # 6586

# transpose data 
pca_nona <- prcomp(t(df_nona), scale = TRUE)
# quick scatter plot
factoextra::fviz_pca_ind(pca_nona) 
plot(pca_nona$x[,1], pca_nona$x[,2])

# Eigenvalues (variance explained by each PC)
pca_var <- pca_nona$sdev^2 
pca_var_perc <- round(pca_var/sum(pca_var)*100, digits = 1)
fviz_eig(pca_nona, addlabels = TRUE)  # scree plot 

pca_results <- as.data.frame(pca_nona$x) %>%
  tibble::rownames_to_column("new_sample_id")  # keep sample IDs

pca_data <- pca_results %>%
  dplyr::select(new_sample_id, PC1, PC2, PC3, PC4) %>% 
  dplyr::inner_join(metadata_F48_lfd, by = "new_sample_id") %>%
  dplyr::mutate(
    hover_text = paste0(
      "Sample: ", sample_id,
      "<br>Diet: ", diet,
      "<br>Strain: ", strain
    )
  )

# Should be all TRUE / empty set
all(pca_results$new_sample_id %in% metadata_F48_lfd$new_sample_id)

pca_diet_F48_lfd <- plot_pca(
  data       = pca_data,
  color_var  = "strain",
  shape_var  = NULL,
  color_vals = c("Ntac" = "#AA3377", "J" = "#CCBB44"),
  file_name  = "pca_F48_strain_lfd.png",
  plot_title = "Female, 48 weeks, lfd (n=17)"
)

plotly::ggplotly(pca_diet_F48_lfd)

ggsave(file.path("doc", "pca_diet_F48_lfd.png"),
       plot = pca_diet_F48_lfd, width = 6, height = 5, dpi = 300, bg = "white")

```


## pca-FFMD
```{r}
dim(df_F48_ffmd) # 18 samples
df_nona <- na.omit(df_F48_ffmd) 

n_original <- nrow(df_F48_ffmd) # 7642
n_nona <- nrow(df_nona) # 6586

# transpose data 
pca_nona <- prcomp(t(df_nona), scale = TRUE)
# quick scatter plot
factoextra::fviz_pca_ind(pca_nona) 
plot(pca_nona$x[,1], pca_nona$x[,2])

# Eigenvalues (variance explained by each PC)
pca_var <- pca_nona$sdev^2 
pca_var_perc <- round(pca_var/sum(pca_var)*100, digits = 1)
fviz_eig(pca_nona, addlabels = TRUE)  # scree plot 

pca_results <- as.data.frame(pca_nona$x) %>%
  tibble::rownames_to_column("new_sample_id")  # keep sample IDs

pca_data <- pca_results %>%
  dplyr::select(new_sample_id, PC1, PC2, PC3, PC4) %>% 
  dplyr::inner_join(metadata_F48_ffmd, by = "new_sample_id") %>%
  dplyr::mutate(
    hover_text = paste0(
      "Sample: ", sample_id,
      "<br>Diet: ", diet,
      "<br>Strain: ", strain
    )
  )

# Should be all TRUE / empty set
all(pca_results$new_sample_id %in% metadata_F48_ffmd$new_sample_id)

pca_diet_F48_ffmd <- plot_pca(
  data       = pca_data,
  color_var  = "strain",
  shape_var  = NULL,
  color_vals = c("Ntac" = "#AA3377", "J" = "#CCBB44"),
  file_name  = "pca_F48_strain_ffmd.png",
  plot_title = "Female, 48 weeks, ffmd (n=18)"
)

print(pca_diet_F48_ffmd)

ggsave(
  file.path("doc", "pca_diet_F48_ffmd.png"),
  plot   = pca_diet_F48_ffmd,
  width  = 6,
  height = 5,
  dpi    = 300,
  bg     = "white"
)
```



```{r}
# totals
strain_lfd_sig  <- limma_results_F48_contrasts$Strain_in_LFD$sig$Protein
strain_ffmd_sig <- limma_results_F48_contrasts$Strain_in_FFMD$sig$Protein

common_strain_proteins <- intersect(strain_lfd_sig, strain_ffmd_sig)
print(common_strain_proteins)
print(setdiff(strain_lfd_sig,  strain_ffmd_sig))

# Euler diagram
fit_euler_strain <- euler(list(lfd = strain_lfd_sig, ffmd = strain_ffmd_sig))

p <- plot(
  fit_euler_strain,
  quantities = TRUE,
  labels     = TRUE,
  fills      = c("#21908CFF", "#D55E00"),
  edges      = TRUE,
  main       = "Significant strain hits"
)

print(p)
ggsave(
  file.path("doc", "euler_F48_Strain_effect_total.png"),
  plot = p, width = 4, height = 3, dpi = 300, bg = "white"
)

print(setdiff(strain_lfd_sig,  strain_ffmd_sig))

cat("Number unique to ffmd:", length(setdiff(strain_ffmd_sig, strain_lfd_sig)), "\n")
cat("Number unique to lfd:",  length(setdiff(strain_lfd_sig,  strain_ffmd_sig)), "\n")
cat("Number overlap (both):", length(intersect(strain_ffmd_sig, strain_lfd_sig)), "\n")
cat("Total significant (ffmd):", length(strain_ffmd_sig), "\n")
cat("Total significant (lfd):",  length(strain_lfd_sig),  "\n")

######################################################################
# up
strain_lfd_up  <- limma_results_F48_contrasts$Strain_in_LFD$up$Protein
strain_ffmd_up <- limma_results_F48_contrasts$Strain_in_FFMD$up$Protein

# Euler diagram
fit_euler_strain_up <- euler(list(lfd = strain_lfd_up, ffmd = strain_ffmd_up))

p_up <- plot(
  fit_euler_strain_up,
  quantities = TRUE,
  labels     = TRUE,
  fills      = c("#fde0dd", "#fa9fb5"),
  edges      = TRUE,
  main       = "Significant strain hits-UP"
)

print(p_up)
ggsave(
  file.path("doc", "euler_F48_Strain_effect_UP.png"),
  plot = p_up, width = 4, height = 3, dpi = 300, bg = "white"
)

cat("Number unique to ffmd -UP:", length(setdiff(strain_ffmd_up, strain_lfd_up)), "\n")
cat("Number unique to lfd-UP:",  length(setdiff(strain_lfd_up,  strain_ffmd_up)), "\n")
cat("Number overlap (both)-UP:", length(intersect(strain_ffmd_up, strain_lfd_up)), "\n")
cat("Total significant (ffmd)-UP:", length(strain_ffmd_up), "\n")
cat("Total significant (lfd)-UP:",  length(strain_lfd_up),  "\n")

###############################################################################
# down
strain_lfd_down  <- limma_results_F48_contrasts$Strain_in_LFD$down$Protein
strain_ffmd_down <- limma_results_F48_contrasts$Strain_in_FFMD$down$Protein

# Euler diagram
fit_euler_strain_down <- euler(list(lfd = strain_lfd_down, ffmd = strain_ffmd_down))

p_down <- plot(
  fit_euler_strain_down,
  quantities = TRUE,
  labels     = TRUE,
  fills      = c("#ece7f2", "#2b8cbe"),
  edges      = TRUE,
  main       = "Significant strain hits-DOWN"
)

print(p_down)
ggsave(
  file.path("doc", "euler_F48_Strain_effect_DOWN.png"),
  plot = p_down, width = 4, height = 3, dpi = 300, bg = "white"
)

cat("Number unique to ffmd -DOWN:", length(setdiff(strain_ffmd_down, strain_lfd_down)), "\n")
cat("Number unique to lfd-DOWN:",  length(setdiff(strain_lfd_down,  strain_ffmd_down)), "\n")
cat("Number overlap (both)-DOWN:", length(intersect(strain_ffmd_down, strain_lfd_down)), "\n")
cat("Total significant (ffmd)-DOWN:", length(strain_ffmd_down), "\n")
cat("Total significant (lfd)-DOWN:",  length(strain_lfd_down),  "\n")

```

```{r}
# totals
strain_lfd_sig  <- limma_results_F48_contrasts$Strain_in_LFD$sig$Protein
strain_ffmd_sig <- limma_results_F48_contrasts$Strain_in_FFMD$sig$Protein

common_strain_proteins <- intersect(strain_lfd_sig, strain_ffmd_sig)
print(common_strain_proteins)

# select proteins to show in heatmap
selected_sites <- common_strain_proteins

# find selected sites in data & filter
sites_in_data <- selected_sites[selected_sites %in% rownames(df_F48)]
filt_selected <- df_F48[sites_in_data, , drop = FALSE]

# --- 4. Create the annotation for columns (samples) ---
ann_col <- data.frame(
  Strain = metadata_F48$strain,  # Or whatever column name in your metadata for strain
  Diet   = metadata_F48$diet     # And for diet. You can include either, or both for richer annotation
)
rownames(ann_col) <- metadata_F48$new_sample_id

heatmap_common_proteins_strain <- pheatmap(
  as.matrix(filt_selected),
  annotation_col           = ann_col,   # Adds the annotation bar for strain and diet
  show_rownames            = TRUE,
  show_colnames            = TRUE,
  clustering_distance_rows = "euclidean",
  clustering_distance_cols = "euclidean",
  clustering_method        = "complete",
  scale                    = "row",     # Z-score across proteins (rows) for relative comparison
  main                     = "Heatmap of Common Strain-Difference Proteins",
  na_col                   = "white"    # NAs will display as white
)

ggsave(file.path("doc", "heatmap_common_proteins_strain.png"),
       plot = heatmap_common_proteins_strain, width = 7, height = 4, dpi = 300, bg = "white")

```

```{r}

strain_ffmd_sig <- limma_results_F48_contrasts$Strain_in_FFMD$sig$Protein

print(strain_ffmd_sig)

# select proteins to show in heatmap
selected_sites <- strain_ffmd_sig

# find selected sites in data & filter
sites_in_data <- selected_sites[selected_sites %in% rownames(df_F48)]
filt_selected <- df_F48[sites_in_data, , drop = FALSE]

# --- 4. Create the annotation for columns (samples) ---
ann_col <- data.frame(
  Strain = metadata_F48$strain,  # Or whatever column name in your metadata for strain
  Diet   = metadata_F48$diet     # And for diet. You can include either, or both for richer annotation
)
rownames(ann_col) <- metadata_F48$new_sample_id

heatmap_strain_ffmd_sig <- pheatmap(
  as.matrix(filt_selected),
  annotation_col           = ann_col,   # Adds the annotation bar for strain and diet
  show_rownames            = TRUE,
  show_colnames            = TRUE,
  clustering_distance_rows = "euclidean",
  clustering_distance_cols = "euclidean",
  clustering_method        = "complete",
  scale                    = "row",     # Z-score across proteins (rows) for relative comparison
  main                     = "heatmap_strain_ffmd_sig",
  na_col                   = "white"    # NAs will display as white
)

ggsave(file.path("doc", "heatmap_strain_ffmd_sig.png"),
       plot = heatmap_strain_ffmd_sig, width = 7, height = 4, dpi = 300, bg = "white")
```

