---
title: "QC_female"
format: html
---


```{r setup}
#| message: false
#| warning: false

source(here::here("R/library.R"))
load(here::here("data/metadata_new_filtered.rda"))
load(here::here("data/prot_removeoutlier.rda"))
```


# Subgroup sex
```{r subgroup sex}
metadata_F <- metadata_new_filtered %>% dplyr::filter(sex == "F")
df_female <- prot_removeoutlier[, metadata_F$sample_id]
print(metadata_F$sample_id)
print(colnames(df_female))
all(colnames(df_female) == metadata_F$sample_id) # TRUE
dim(df_female) # 8115 proteins, 112 samples

# 1) Add new sample IDs to metadata_F
metadata_F <- metadata_F %>%
  dplyr::mutate(new_sample_id = paste0("S", seq_len(n())))

# 2) Rename columns in df_female using the new IDs
colnames(df_female) <- metadata_F$new_sample_id
head(colnames(df_female))

metadata_F <- metadata_F %>%
  dplyr::mutate(Group = paste(diet, strain, sep = "_"))

table(metadata_F$diet)   # FFMD-73, LFD-39
table(metadata_F$strain) # J-55, Ntac =57
table(metadata_F$Group)  # FFMD_J = 35, FFMD_Ntac = 38, LFD_J = 20, LFD_Ntac = 19

usethis::use_data(df_female, overwrite = TRUE)
usethis::use_data(metadata_F, overwrite = TRUE)
```


# Missing values
```{r missing values}
# Missing values
dim(df_female) # 8115-112
sum(is.na(df_female)) # 60588

# 1. Prepare the binary NA matrix (0 = present, 1 = missing)
missing_matrix <- as.matrix(is.na(df_female)) * 1

annotation_col <- metadata_F %>%
  dplyr::select(new_sample_id, diet, strain, weeks) %>%
  tibble::column_to_rownames(var = "new_sample_id")

# alignment check
stopifnot(all(colnames(missing_matrix) == rownames(annotation_col))) # will error if not aligned

# --- Step 4: Generate the Final Heatmap ---
na_heatmap_female <- pheatmap(
  missing_matrix,                    # The 0/1 data matrix
  annotation_col = annotation_col,   # The annotation data frame with correct rownames
  cluster_rows = FALSE,              # Don't cluster thousands of genes, it's slow and uninformative
  cluster_cols = TRUE,               # Cluster samples to see which are similar in missingness
  show_rownames = FALSE,             # Don't show the gene names, there are too many
  show_colnames = FALSE,             # Hide sample IDs
  color = c("gray95", "black"),      # 0 = Present, 1 = Missing
  legend_breaks = c(0, 1),
  legend_labels = c("Present", "Missing"),
  main = "Pattern of Missing Values Across Samples (Female)"
)

ggsave(file.path("doc", "na_heatmap_female.png"),
       plot = na_heatmap_female, width = 7, height = 6, dpi = 300, bg = "white")

##################################### valid values

valid_value_counts <- colSums(!is.na(df_female))
count_data <- data.frame(column = names(valid_value_counts), count = valid_value_counts)

mean_value <- mean(count_data$count)
n_samples <- length(valid_value_counts)

vv1_female <- ggplot(count_data, aes(x = seq_along(column), y = count)) +
  geom_bar(stat = "identity", fill = "lightblue4") +
  geom_hline(yintercept = mean_value, color = "red", linetype = "dashed", size = 1) +
  geom_text(aes(x = length(column) * 0.8, y = mean_value,
                label = paste0("Mean = ", round(mean_value, 0))),
            vjust = -0.5, color = "red", size = 4) +
  labs(title = paste0("Valid Values per sample, only female (n=", n_samples, ")"),
       x = paste0("Samples (S1â€“S", n_samples, ")"),
       y = "Valid Values") +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5, size = 16),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    panel.grid.major.x = element_blank()
  )

ggsave(file.path("doc", "vv1_female.png"),
       plot = vv1_female, width = 7, height = 4, dpi = 300, bg = "white")

```


# Filtering
```{r}
female_log2_filt100 <- PhosR::selectOverallPercent(df_female, 1)   # 6359  (6119)
female_log2_filt70  <- PhosR::selectOverallPercent(df_female, 0.7) # 7224  (7358)
female_log2_filt    <- PhosR::selectOverallPercent(df_female, 0.5) # 7641  (7613)

usethis::use_data(female_log2_filt, overwrite = TRUE)
```

## Missing values2
```{r}
# Missing values
dim(female_log2_filt) # 7641-112
sum(is.na(female_log2_filt)) # 19600

# 1. Prepare the binary NA matrix (0 = present, 1 = missing)
missing_matrix <- as.matrix(is.na(female_log2_filt)) * 1

annotation_col <- metadata_F %>%
  dplyr::select(new_sample_id, diet, strain, weeks) %>%
  tibble::column_to_rownames(var = "new_sample_id")

# alignment check
stopifnot(all(colnames(missing_matrix) == rownames(annotation_col))) # will error if not aligned

# --- Step 4: Generate the Final Heatmap ---
na_heatmap_female_norm <- pheatmap(
  missing_matrix,                    # The 0/1 data matrix
  annotation_col = annotation_col,   # The annotation data frame with correct rownames
  cluster_rows = FALSE,              # Don't cluster thousands of genes, it's slow and uninformative
  cluster_cols = TRUE,               # Cluster samples to see which are similar in missingness
  show_rownames = FALSE,             # Don't show the gene names, there are too many
  show_colnames = FALSE,             # Hide sample IDs
  color = c("gray95", "black"),      # Use two distinct colors for Present (0) and Missing (1)
  legend_breaks = c(0, 1),           # Specify breaks for the legend
  legend_labels = c("Present", "Missing"), # Label the legend clearly
  main = "Female, filtered_normalized"     # Add a title
)

ggsave(file.path("doc", "na_heatmap_female_norm.png"),
       plot = na_heatmap_female_norm, width = 7, height = 6, dpi = 300, bg = "white")


valid_value_counts <- colSums(!is.na(female_log2_filt))
count_data <- data.frame(column = names(valid_value_counts), count = valid_value_counts)

mean_value <- mean(count_data$count)

vv2_female <- ggplot(count_data, aes(x = seq_along(column), y = count)) +
  geom_bar(stat = "identity", fill = "lightblue4") +
  geom_hline(yintercept = mean_value, color = "red", linetype = "dashed", size = 1) +
  geom_text(aes(x = length(column) * 0.8, y = mean_value,
                label = paste0("Mean = ", round(mean_value, 0))),
            vjust = -0.5, color = "red", size = 4) +
  labs(title = "Valid Values per sample, only female (n=112), filtered",
       x = "Samples (s1-s116)",
       y = "Valid Values") +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5, size = 16),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    panel.grid.major.x = element_blank()
  )

ggsave(file.path("doc", "vv2_female.png"),
       plot = vv2_female, width = 7, height = 4, dpi = 300, bg = "white")

```



# Distribution
```{r}
df_long <- tidyr::pivot_longer(female_log2_filt, 
                               cols = everything(), 
                               names_to = "new_sample_id", 
                               values_to = "intensity")

density_plot_female <- ggplot(df_long, aes(x = intensity, color = new_sample_id)) +
  geom_density() +
  labs(title = "Density Distribution, female", x = "Intensity", y = "Density") +
  theme_minimal(base_size = 14) +
  theme(
    plot.title      = element_text(hjust = 0.5, face = "bold"),
    legend.position = "none"
  )

density_plot_female
plotly::ggplotly(density_plot_female)

ggsave(file.path("doc", "density_plot_female.png"),
       plot = density_plot_female, width = 5, height = 3, dpi = 300, bg = "white")

################# boxplot ######################################################
# base R boxplot
png(file.path("doc", "Boxplot_female.png"), width = 13, height = 6, units = "in", res = 300, bg = "white")
boxplot(female_log2_filt,
        las = 2,                # rotate x-axis labels
        outline = FALSE,        # hide extreme outliers for clarity
        col = "lightblue",
        main = "Female- before normalization",
        ylab = "Log2 intensity")
dev.off()

```

# Normalization median-centering, PhosR
```{r}
female_log2_filt_median <- medianScaling(female_log2_filt[1:ncol(female_log2_filt)], scale = TRUE)
female_log2_filt_median <- as.data.frame(female_log2_filt_median)
usethis::use_data(female_log2_filt_median, overwrite = TRUE)

############################### boxplot ########################################
png(file.path("doc", "Boxplot_female_norm.png"), width = 13, height = 6, units = "in", res = 300, bg = "white")
boxplot(female_log2_filt_median,
        las = 2,                # rotate x-axis labels
        outline = FALSE,        # hide extreme outliers for clarity
        col = "lightgreen",
        main = "After median centering normalization",
        ylab = "Log2 intensity")
dev.off()

############## density plot
# Convert data to long format
df_long <- tidyr::pivot_longer(female_log2_filt_median, 
                               cols = everything(), 
                               names_to = "new_sample_id", 
                               values_to = "intensity")

density_plot_female_norm <- ggplot(df_long, aes(x = intensity, color = new_sample_id)) +
  geom_density() +
  labs(title = "After normalization, female", x = "Intensity", y = "Density") +
  theme_minimal(base_size = 14) +
  theme(
      plot.title = element_text(hjust = 0.5, face = "bold"),
      legend.position = "none"
  )

density_plot_female_norm
plotly::ggplotly(density_plot_female_norm)

ggsave(file.path("doc", "density_plot_female_norm.png"),
       plot = density_plot_female_norm, width = 5, height = 3, dpi = 300, bg = "white")

```


# PCA1 before normalization
```{r}
dim(female_log2_filt) # 8115-112
df_nona <- na.omit(female_log2_filt) # 6119

n_original <- nrow(female_log2_filt)
n_nona <- nrow(df_nona)

# transpose data 
pca_nona <- prcomp(t(df_nona), scale = T)

# quick scatter plot
factoextra::fviz_pca_ind(pca_nona) 
plot(pca_nona$x[,1], pca_nona$x[,2])

# Eigenvalues (variance explained by each PC): standard deviations squared.
pca_var <- pca_nona$sdev^2 
pca_var_perc <- round(pca_var/sum(pca_var)*100, digits = 1) # percentage of each component
fviz_eig(pca_nona, addlabels = T)  # scree plot 

pca_results <- as.data.frame(pca_nona$x) %>%
  tibble::rownames_to_column("new_sample_id")  # keep sample IDs

# double check the alignment
all(pca_results$new_sample_id %in% metadata_F$new_sample_id)
setdiff(pca_results$new_sample_id, metadata_F$new_sample_id)

pca_data_F <- pca_results %>%
  dplyr::select(new_sample_id, PC1, PC2, PC3, PC4) %>% 
  dplyr::inner_join(metadata_F, by = "new_sample_id") %>%
  dplyr::mutate(
    weeks = as.factor(weeks),
    hover_text = paste0(
      "Sample: ", sample_id,
      "<br>Diet: ", diet,
      "<br>Strain: ", strain,
      "<br>Weeks: ", weeks
    )
  )

# day batch
pca_F_day <- ggplot(pca_data_F, aes(x = PC1, y = PC2, color = prep_day_batch, shape = diet)) +
  geom_point(aes(text = hover_text), size = 3.5, alpha = 0.7) +
  scale_color_brewer(palette = "Set1") +
  labs(
    title = "PCA-Female: prep day batch (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_day)
plotly::ggplotly(pca_F_day)

ggsave(file.path("doc", "pca_F_day.png"), plot = pca_F_day, width = 8, height = 6, dpi = 300, bg = "white")

# beatbox batch
pca_F_beatbox <- ggplot(pca_data_F, aes(x = PC1, y = PC2, color = beatbox_batch, shape = prep_day_batch)) +
  geom_point(aes(text = hover_text), size = 3.5, alpha = 0.7) +
  scale_color_viridis_d(option = "turbo") +
  labs(
    title = "PCA-Female: beatbox batch (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_beatbox)
plotly::ggplotly(pca_F_beatbox)

ggsave(file.path("doc", "pca_F_beatbox.png"), plot = pca_F_beatbox, width = 8, height = 6, dpi = 300, bg = "white")

##################### Diet, strain ##################
pca_F_diet <- ggplot(pca_data_F, aes(x = PC1, y = PC2, color = diet, shape = weeks, text = hover_text)) + 
  geom_point(size = 3.5, alpha = 0.7) + 
  stat_ellipse(aes(group = diet, fill = diet), geom = "path", show.legend = FALSE) + 
  scale_color_manual(values = c("LFD" = "#21908CFF", "FFMD" = "#D55E00" )) +
  labs(
    title = "PCA-Female: diet & weeks (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_diet)
plotly::ggplotly(pca_F_diet)

ggsave(file.path("doc", "pca_F_diet.png"), plot = pca_F_diet, width = 7, height = 6, dpi = 300, bg = "white")

#####################
pca_F_strain <- ggplot(pca_data_F, aes(x = PC1, y = PC2, color = strain, shape = weeks, text = hover_text)) + 
  geom_point(size = 3.5, alpha = 0.7) + 
  stat_ellipse(aes(group = strain, fill = strain), geom = "path", show.legend = FALSE) + 
  scale_color_manual(values = c("Ntac" = "#AA3377", "J" = "#CCBB44" )) +
  labs(
    title = "PCA-Female: strain & weeks (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_strain)
plotly::ggplotly(pca_F_strain)

ggsave(file.path("doc", "pca_F_strain.png"), plot = pca_F_strain, width = 7, height = 6, dpi = 300, bg = "white")

#####################
pca_F_weeks <- ggplot(pca_data_F, aes(x = PC1, y = PC2, color = weeks, shape = strain)) +
  geom_point(aes(text = hover_text), size = 3.5, alpha = 0.7) +
  scale_color_brewer(palette = "Set2") +
  labs(
    title = "PCA-Female: weeks & strain (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_weeks)
plotly::ggplotly(pca_F_weeks)

ggsave(file.path("doc", "pca_F_weeks.png"), plot = pca_F_weeks, width = 7, height = 6, dpi = 300, bg = "white")

```

# PCA2 after normalization
```{r}
dim(female_log2_filt_median) # 7612-112
df_nona <- na.omit(female_log2_filt_median) # 6168

n_original <- nrow(female_log2_filt_median)
n_nona <- nrow(df_nona)

# transpose data 
pca_nona <- prcomp(t(df_nona), scale = T)

# quick scatter plot
factoextra::fviz_pca_ind(pca_nona) 
plot(pca_nona$x[,1], pca_nona$x[,2])

# Eigenvalues (variance explained by each PC): standard deviations squared.
pca_var <- pca_nona$sdev^2 
pca_var_perc <- round(pca_var/sum(pca_var)*100, digits = 1) #percentage of each component
fviz_eig(pca_nona, addlabels = T)  #scree plot 

pca_results <- as.data.frame(pca_nona$x) %>%
  tibble::rownames_to_column("new_sample_id")  # keep sample IDs

# double check the alignment
all(pca_results$new_sample_id %in% metadata_F$new_sample_id)

pca_data_F_norm <- pca_results %>%
  dplyr::select(new_sample_id, PC1, PC2, PC3, PC4) %>% 
  dplyr::inner_join(metadata_F, by = "new_sample_id") %>%
  dplyr::mutate(
    weeks = as.factor(weeks),
    hover_text = paste0(
      "Sample: ", sample_id,
      "<br>Diet: ", diet,
      "<br>Strain: ", strain,
      "<br>Weeks: ", weeks
    )
  )

# day batch
pca_F_day_norm <- ggplot(pca_data_F_norm, aes(x = PC1, y = PC2, color = prep_day_batch, shape = diet)) +
  geom_point(aes(text = hover_text), size = 3.5, alpha = 0.7) +
  scale_color_brewer(palette = "Set1") +
  labs(
    title = "PCA-Female-norm: prep day batch (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_day_norm)
plotly::ggplotly(pca_F_day_norm)

ggsave(file.path("doc", "pca_F_day_norm .png"), plot = pca_F_day_norm, width = 8, height = 6, dpi = 300, bg = "white")

# beatbox batch
pca_F_beatbox_norm  <- ggplot(pca_data_F_norm, aes(x = PC1, y = PC2, color = beatbox_batch, shape = prep_day_batch)) +
  geom_point(aes(text = hover_text), size = 3.5, alpha = 0.7) +
  scale_color_viridis_d(option = "turbo") +
  labs(
    title = "PCA-Female-norm: beatbox batch (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_beatbox_norm)
plotly::ggplotly(pca_F_beatbox_norm)

ggsave(file.path("doc", "pca_F_beatbox_norm .png"), plot = pca_F_beatbox_norm, width = 8, height = 6, dpi = 300, bg = "white")

##################### Diet, strain ##################
pca_F_diet_norm  <- ggplot(pca_data_F_norm, aes(x = PC1, y = PC2, color = diet, shape = weeks, text = hover_text)) + 
  geom_point(size = 3.5, alpha = 0.7) + 
  stat_ellipse(aes(group = diet, fill = diet), geom = "path", show.legend = FALSE) + 
  scale_color_manual(values = c("LFD" = "#21908CFF", "FFMD" = "#D55E00" )) +
  labs(
    title = "PCA-Female-norm: diet & weeks (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_diet_norm)
plotly::ggplotly(pca_F_diet_norm)

ggsave(file.path("doc", "pca_F_diet_norm .png"), plot = pca_F_diet_norm, width = 7, height = 6, dpi = 300, bg = "white")

#####################
pca_F_strain_norm  <- ggplot(pca_data_F_norm, aes(x = PC1, y = PC2, color = strain, shape = weeks, text = hover_text)) + 
  geom_point(size = 3.5, alpha = 0.7) + 
  stat_ellipse(aes(group = strain, fill = strain), geom = "path", show.legend = FALSE) + 
  scale_color_manual(values = c("Ntac" = "#AA3377", "J" = "#CCBB44" )) +
  labs(
    title = "PCA-Female-norm: strain & weeks (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_strain_norm)
plotly::ggplotly(pca_F_strain_norm)

ggsave(file.path("doc", "pca_F_strain_norm .png"), plot = pca_F_strain_norm, width = 7, height = 6, dpi = 300, bg = "white")

#####################
pca_F_weeks_norm  <- ggplot(pca_data_F_norm , aes(x = PC1, y = PC2, color = weeks, shape = strain)) +
  geom_point(aes(text = hover_text), size = 3.5, alpha = 0.7) +
  scale_color_brewer(palette = "Set2") +
  labs(
    title = "PCA-Female-norm: weeks & strain (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_weeks_norm)
plotly::ggplotly(pca_F_weeks_norm)

ggsave(file.path("doc", "pca_F_weeks_norm .png"), plot = pca_F_weeks_norm, width = 7, height = 6, dpi = 300, bg = "white")

```




# Batchcorr beatbox
```{r}
setequal(colnames(female_log2_filt_median), metadata_F$new_sample_id) # TRUE
all(colnames(female_log2_filt_median) == metadata_F$new_sample_id)    # TRUE

female_filt_median_batchcorr <- limma::removeBatchEffect(
  female_log2_filt_median,
  batch = metadata_F$beatbox_batch
)
female_filt_median_batchcorr <- as.data.frame(female_filt_median_batchcorr)
usethis::use_data(female_filt_median_batchcorr, overwrite = TRUE)

```


# PCA3 beatbox_batchcorr
```{r}
dim(female_filt_median_batchcorr) # 7642
df_nona <- na.omit(female_filt_median_batchcorr) # 6354

n_original <- nrow(female_filt_median_batchcorr)
n_nona <- nrow(df_nona)

# transpose data 
pca_nona <- prcomp(t(df_nona), scale = TRUE)

# quick scatter plot
factoextra::fviz_pca_ind(pca_nona) 
plot(pca_nona$x[,1], pca_nona$x[,2])

# Eigenvalues (variance explained by each PC): standard deviations squared.
pca_var <- pca_nona$sdev^2 
pca_var_perc <- round(pca_var / sum(pca_var) * 100, digits = 1) # percentage of each component
fviz_eig(pca_nona, addlabels = TRUE)  # scree plot 

pca_results <- as.data.frame(pca_nona$x) %>%
  tibble::rownames_to_column("new_sample_id")  # keep sample IDs

pca_data <- pca_results %>%
  dplyr::select(new_sample_id, PC1, PC2, PC3, PC4) %>% 
  dplyr::inner_join(metadata_F, by = "new_sample_id") %>%
  dplyr::mutate(
    weeks = as.factor(weeks),
    hover_text = paste0(
      "Sample: ", sample_id,
      "<br>Diet: ", diet,
      "<br>Strain: ", strain,
      "<br>Weeks: ", weeks
    )
  )

# Should be all TRUE / empty sets
all(pca_results$new_sample_id %in% metadata_F$new_sample_id)

# ------------------------- Plots -------------------------

# prep day batch
pca_F_day_batchcorr <- ggplot(pca_data, aes(x = PC1, y = PC2, color = prep_day_batch, shape = diet)) +
  geom_point(aes(text = hover_text), size = 3.5, alpha = 0.7) +
  scale_color_brewer(palette = "Set1") +
  labs(
    title = "PCA-Female batchcorr: prep day batch (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_day_batchcorr)
plotly::ggplotly(pca_F_day_batchcorr)

ggsave(file.path("doc", "pca_F_day_batchcorr.png"),
       plot = pca_F_day_batchcorr, width = 8, height = 6, dpi = 300, bg = "white")

# beatbox batch
pca_F_beatbox_batchcorr <- ggplot(pca_data, aes(x = PC1, y = PC2, color = beatbox_batch, shape = prep_day_batch)) +
  geom_point(aes(text = hover_text), size = 3.5, alpha = 0.7) +
  scale_color_viridis_d(option = "turbo") +
  labs(
    title = "PCA-Female batchcorr: beatbox batch (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_beatbox_batchcorr)
plotly::ggplotly(pca_F_beatbox_batchcorr)

ggsave(file.path("doc", "pca_F_beatbox_batchcorr.png"),
       plot = pca_F_beatbox_batchcorr, width = 8, height = 6, dpi = 300, bg = "white")

# diet & weeks
pca_F_diet_week_batchcorr <- ggplot(pca_data, aes(x = PC1, y = PC2, color = diet, shape = weeks, text = hover_text)) +
  geom_point(size = 3.5, alpha = 0.7) +
  stat_ellipse(aes(group = diet, fill = diet), geom = "path", show.legend = FALSE) +
  scale_color_manual(values = c("LFD" = "#21908CFF", "FFMD" = "#D55E00" )) +
  labs(
    title = "PCA-Female batchcorr: diet & weeks (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_diet_week_batchcorr)
plotly::ggplotly(pca_F_diet_week_batchcorr)

ggsave(file.path("doc", "pca_F_diet_week_batchcorr.png"), 
       plot = pca_F_diet_week_batchcorr, width = 7, height = 6, dpi = 300, bg = "white")

# strain & weeks
pca_F_strain_weeks_batchcorr <- ggplot(pca_data, aes(x = PC1, y = PC2, color = strain, shape = weeks, text = hover_text)) +
  geom_point(size = 3.5, alpha = 0.7) +
  stat_ellipse(aes(group = strain, fill = strain), geom = "path", show.legend = FALSE) +
  scale_color_manual(values = c("Ntac" = "#AA3377", "J" = "#CCBB44" )) +
  labs(
    title = "PCA-Female batchcorr: strain & weeks (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_strain_weeks_batchcorr)
plotly::ggplotly(pca_F_strain_weeks_batchcorr)

ggsave(file.path("doc", "pca_F_strain_weeks_batchcorr.png"), 
       plot = pca_F_strain_weeks_batchcorr, width = 7, height = 6, dpi = 300, bg = "white")

# weeks & strain
pca_F_weeks_batchcorr <- ggplot(pca_data, aes(x = PC1, y = PC2, color = weeks, shape = strain)) +
  geom_point(aes(text = hover_text), size = 3.5, alpha = 0.7) +
  scale_color_brewer(palette = "Set2") +
  labs(
    title = "PCA-Female batchcorr: weeks & strain (n=112)",
    subtitle = paste("based on", n_nona, "proteins out of", n_original),
    x = paste0("PC1 (", pca_var_perc[1], "%)"),
    y = paste0("PC2 (", pca_var_perc[2], "%)")
  ) +
  theme_bw(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5)
  )

print(pca_F_weeks_batchcorr)
plotly::ggplotly(pca_F_weeks_batchcorr)

ggsave(file.path("doc", "pca_F_weeks_batchcorr.png"), 
       plot = pca_F_weeks_batchcorr, width = 7, height = 6, dpi = 300, bg = "white")

```














# Dynamic range
```{r dynamic range}
class(female_filt50_median_batchcorr) # data frame 

# create abundance data
abundance_data <- female_filt50_median_batchcorr %>%
  mutate(median = matrixStats::rowMedians(as.matrix(.), na.rm = TRUE)) %>% # ignores NA
  arrange(desc(median)) %>% # from most to least
  mutate(rank = row_number(),
         proteins = rownames(.))



# define highlight sets
custom_proteins <- c("Akt1", "Akt2", "Akt1s1", "Gsk3a", "Gsk3b", "Irs1", "Irs2", "Insr") 
N <- 10
top_proteins <- abundance_data$proteins[1:N]
bottom_proteins <- abundance_data$proteins[(nrow(abundance_data)-N+1):nrow(abundance_data)]


# create a catergory column in abundance data with highlight sets
abundance_data <- abundance_data %>%
  mutate(
    Category = case_when(
      proteins %in% custom_proteins  ~ "Custom highlight",
      proteins %in% top_proteins     ~ "Most abundant",
      proteins %in% bottom_proteins  ~ "Least abundant",
      TRUE                           ~ "Other"
    )
  )

# subset highlighted rows
highlighted <- abundance_data %>%
  filter(Category != "Other")

# set seed for reproducible label placement
set.seed(137)

abundance_global_female <- ggplot(abundance_data, aes(x = rank, y = median)) +
  geom_point(
    aes(color = Category),
    size = 1,
    alpha = 0.7,
    show.legend = FALSE
  ) +
    # layer 2 for the highlights
  geom_point(
    data = highlighted,
    aes(x = rank, y = median, color = Category),
    size = 3
  ) +
    # layer 3 for labels
  geom_label_repel(
    data = highlighted,
    aes(x = rank, y = median, label = proteins, fill = Category),
    color = "black", # color is set outside of aes
    size = 5,
    max.overlaps = 25, # if too many would overlap, it drops extras (prints a message).
    nudge_y = 0.1, # lifts labels a bit.
    box.padding = 0.5, # adds space around labels.
    show.legend = FALSE
  ) +
    # color scale for the dots (points)
  scale_color_manual(
    values = c(
      "Most abundant"    = "#E69F00",
      "Least abundant"   = "#56B4E9",
      "Custom highlight" = "#D55E00",
      "Other"            = "gray60"
    )
  ) +
    # color scale for the labels
  scale_fill_manual(
    values = c(
      "Most abundant"    = "#FFE5B4",
      "Least abundant"   = "#CFE2F3",
      "Custom highlight" = "#F7CAC9"
    )
  ) +
    # annotations
  labs(
    title = "Protein Abundance - Female, global",
    x = "Protein abundance rank",
    y = "Median log2 intensity"
  ) +
    # theme, non-data styling
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    legend.position = "none"
  )

print(abundance_global_female)

ggsave(file.path("doc", "abundance_global_female.png"), plot = abundance_global_female, width = 7, height = 6, dpi = 300,bg = "white")
```


